/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    // inOrderTraversal will push nodes in vector in ascending order.
    void inOrderTraversal(TreeNode* root,vector<int>&arr){
        if(!root){
             return;
        }
        inOrderTraversal(root->left,arr);
        arr.push_back(root->val);
        inOrderTraversal(root->right,arr);

    }
    int minDiffInBST(TreeNode* root) {
        vector<int>nodes;
        inOrderTraversal(root,nodes);
        int mini=INT_MAX;
        for(int i=0;i<nodes.size()-1;i++){
            mini=min(nodes[i+1]-nodes[i],mini);
        }
        return mini;
    }
};
